tags:
- name: Authentication
  description: Authentication
- name: User
  description: User
- name: Post
  description: Post

host: http://localhost:3005
basePath: /api/v1
schemes:
 - https
 - http

paths:
# [POST] /api/v1/signup
  /api/v1/auth/register:
    post:
      tags:
      - Authentication
      summary: Registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: user email
                  example: youssefelzanaty@gmail.com
                password:
                  type: string
                  description: user password
                  example: a11y23q
                userType:
                  type: string
                  description: user type
                  example : personal
                professionId:
                  type: number
                  description: profession id
                  example: 1
                displayName:
                  type: string
                  description: display name
                  example: Youssef ElZanaty
                country:
                  type: string
                  description: country
                  example: Egypt
                phoneNumber:
                  type: string
                  description: phone number
                  example: "+201001042218"
               
      responses:
        201:
          description: 'Created'
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/UserWithToken'
        400:
          description: 'Bad Request'
        401:
          description: 'Unauthorized'
        409:
          description: 'Conflict'

  /api/v1/auth/login:
    post:
      tags:
      - Authentication
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - type: object
                properties:
                  email:
                    type: string
                    description: user email
                    example: youssefelzanaty@gmail.com
                  password:
                    type: string
                    description: user password
                    example: a11y23q
              - type: object
                properties:
                  password:
                    type: string
                    description: user password
      responses:
        200:
          description: 'OK'
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/UserWithToken'
        400:
          description: 'Bad Request'
        401:
          description: 'Not Found'
        404:
          description: 'Not Found'



  /api/v1/auth/password/forget:
    post:
      tags:
      - Authentication
      summary: Forget User Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: user email
                  example: "youssefelzanaty@gmail.com"
      responses:
        200:
          description: 'Ok'
        400:
          description: 'Bad Request'
        404:
          description: 'Not Found'
  /api/v1/auth/password/reset:
    post:
      tags:
      - Authentication
      summary: Reset Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: user password
                  example: "a11y23q"
                token:
                  type: string
                  description: password reset token
                  example: "eyJpc3MiOiJ0b3B0YWwuY29tIiwiZXhwIjoxNDI2NDIwODAwLCJodHRwOi8vdG9wdGFsLmNvbS9qd3RfY2xhaW1zL2lzX2FkbWluIjp0cnVlLCJjb21wYW55IjoiVG9wdGFsIiwiYXdlc29tZSI6dHJ1ZX0"
      responses:
        200:
          description: 'Ok'
        400:
          description: 'Bad Request'
        404:
          description: 'Not Found'

  /api/v1/auth/email/confirmation/send:
    post:
      tags:
      - Authentication
      summary: Send Email Confirmation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: user email
                  example: "youssefelzanaty@gmail.com"               
      responses:
        200:
          description: 'Ok'
        400:
          description: 'Bad Request'
        404:
          description: 'Not Found'

  /api/v1/auth/email/confirm:
    post:
      tags:
      - Authentication
      summary: Confirm Email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: email confirmation token
                  example: "eyJpc3MiOiJ0b3B0YWwuY29tIiwiZXhwIjoxNDI2NDIwODAwLCJodHRwOi8vdG9wdGFsLmNvbS9qd3RfY2xhaW1zL2lzX2FkbWluIjp0cnVlLCJjb21wYW55IjoiVG9wdGFsIiwiYXdlc29tZSI6dHJ1ZX0"
      responses:
        200:
          description: 'Ok'
        400:
          description: 'Bad Request'
        404:
          description: 'Not Found'

  /api/v1/users/password:
    put:
      tags:
      - User
      summary: Update User Password
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  description: user old password
                newPassword:
                  type: string
                  description: user new password
      responses:
        200:
          description: 'Ok'
        400:
          description: 'Bad Request'
        401:
          description: 'Not Found'
        404:
          description: 'Not Found'




  /api/v1/users:
    put:
      tags:
      - User
      summary: Update User 
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                professionId:
                  type: number
                  description: profession id
                  example: 1
              
                displayName:
                  type: string
                  description: display name
                  example: Youssef ElZanaty
                country:
                  type: string
                  description: country
                  example: Egypt
                phoneNumber:
                  type: string
                  description: phone number
                  example: "+201001042218"
                  required: false
                profileInfo:
                  type: string
                  description: Profile Info
                  example: "I like art"
                  required: false
                                    
      responses:
        200:
          description: 'Ok'
        400:
          description: 'Bad Request'
        404:
          description: 'Not Found'


  /api/v1/posts/photo:
    post:
      tags:
      - Post
      summary: Create Photo Post
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                caption:
                  type: string
                  description: caption for the post
                  required: false
                  example: my new drawing
                content:
                  type: string
                  format: base64
                  description: base64 image
                  example: "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII="
      responses:
        201:
          description: 'CREATED'
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/Post'
        400:
          description: 'Bad Request'
        401:
          description: 'Not Found'
        404:
          description: 'Not Found'

  /api/v1/posts/{id}:
    get:
      tags:
      - Post
      summary: Get post by id
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the post to get
      security:
        - bearerAuth: []
      responses:
        200:
          description: 'OK'
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/Post'
        400:
          description: 'Bad Request'
        401:
          description: 'Not Found'
        404:
          description: 'Not Found'


securitySchemes:
  bearerAuth:            # arbitrary name for the security scheme
    type: http
    scheme: bearer
    bearerFormat: JWT    # optio

# definitions
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          description: user email
          example: "youssefelzanaty@gmail.com"
        emailConfirmed:
          type: boolean
          description: user email activated
          example: true
        profileInfo:
          type: string
          description: user profile info\
          example: "I like drawing"
        userType:
          type: string
          description: user type
          example: "personal"
        profession:
          type: object
          description: user profession
          properties:
            id: 
              type: number
              description: profession id
              example: 1
            name:
              type: string
              description: profession name
              example: "Graphic Design"
        displayName:
          type: string
          description: display name
          example: "Youssef ElZanaty"
        country:
          type: string
          description: country
          example: "Egypt"
        phoneNumber:
          type: string
          description: phone number
          example: "+201001042218"

    UserWithToken:
      allOf:     
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            token:
              type: string
    Post:
      type: object
      properties:
        id:
          type: number
          description: post id
          example: 6
        caption:
          type: string
          description: post caption
          example: "my new drawing"
        postType:
          type: string
          description: post type
          example: "photo"
        url:
          type: string
          description: post content url
          example: "https://static.wikia.nocookie.net/vampirediaries/images/1/16/Damon-S8.jpg/revision/latest?cb=20170225081735"
        profession:
          type: object
          description: post profession
          properties:
            id: 
              type: number
              description: profession id
              example: 1
            name:
              type: string
              description: profession name
              example: "Graphic Design"
        user:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date
          description: post creation date
          example: "2020-09-12"
        updatedAt:
          type: string
          format: date
          description: post updated date
          example: "2020-09-12"


            
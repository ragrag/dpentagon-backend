tags:
- name: Authentication
  description: Authentication
- name: User
  description: User

host: http://localhost:3005
basePath: /api/v1
schemes:
 - https
 - http

paths:
# [POST] /api/v1/signup
  /api/v1/register:
    post:
      tags:
      - Authentication
      summary: Registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: user email
                  example: youssefelzanaty@gmail.com
                password:
                  type: string
                  description: user password
                  example: a11y23q
                userType:
                  type: string
                  description: user type
                  example : personal
                professionId:
                  type: number
                  description: profession id
                  example: 1
                displayName:
                  type: string
                  description: display name
                  example: Youssef ElZanaty
                country:
                  type: string
                  description: country
                  example: Egypt
                phoneNumber:
                  type: string
                  description: phone number
                  example: "+201001042218"
               
      responses:
        201:
          description: 'Created'
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/UserWithToken'
        400:
          description: 'Bad Request'
        401:
          description: 'Unauthorized'
        409:
          description: 'Conflict'

  /api/v1/login:
    post:
      tags:
      - Authentication
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - type: object
                properties:
                  email:
                    type: string
                    description: user email
                    example: youssefelzanaty@gmail.com
                  password:
                    type: string
                    description: user password
                    example: a11y23q
              - type: object
                properties:
                  password:
                    type: string
                    description: user password
      responses:
        200:
          description: 'Created'
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/UserWithToken'
        400:
          description: 'Bad Request'
        401:
          description: 'Not Found'
        404:
          description: 'Not Found'

  /api/v1/users/password:
    put:
      tags:
      - User
      summary: Update User Password
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  description: user old password
                newPassword:
                  type: string
                  description: user new password
      responses:
        200:
          description: 'Ok'
        400:
          description: 'Bad Request'
        401:
          description: 'Not Found'
        404:
          description: 'Not Found'



  /api/v1/users:
    put:
      tags:
      - User
      summary: Update User 
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                professionId:
                  type: number
                  description: profession id
                  example: 1
                displayName:
                  type: string
                  description: display name
                  example: Youssef ElZanaty
                country:
                  type: string
                  description: country
                  example: Egypt
                phoneNumber:
                  type: string
                  description: phone number
                  example: "+201001042218"
      responses:
        200:
          description: 'Ok'
        400:
          description: 'Bad Request'
        404:
          description: 'Not Found'

securitySchemes:
  bearerAuth:            # arbitrary name for the security scheme
    type: http
    scheme: bearer
    bearerFormat: JWT    # optio

# definitions
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          description: user email
        profileInfo:
          type: string
          description: user profile info
        userType:
          type: string
          description: user type
        profession:
          type: object
          description: user profession
          properties:
            id: 
              type: number
              description: profession id
            name:
              type: string
              description: profession name
        displayName:
          type: string
          description: display name
        country:
          type: string
          description: country
        phoneNumber:
          type: string
          description: phone number

    UserWithToken:
      allOf:     
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            token:
              type: string


            